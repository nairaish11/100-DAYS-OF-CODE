// Q1 https://leetcode.com/problems/sum-of-all-odd-length-subarrays/
 
 class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        int result = 0;
        int n = arr.length;

        for (int i=0; i<n; i++) {
            int end = i+1;
            int start = n-i;
            int total = start*end;
            int odd = total / 2;

            if (total %2 == 1) {
                odd++;
            }
            result += odd * arr[i]; 
        }

        return result;
    }
}


//Q2 https://leetcode.com/problems/find-numbers-with-even-number-of-digits/
  
  class Solution {
    public int findNumbers(int[] nums) {
        int count = 0;
        
        for (int i=0; i<nums.length; ++i) {
            int digits = (int) (Math.log10(nums[i])) + 1;
            
            if (digits%2 == 0) {
                count++;
            }
        }
        return count;
    }
}



// Q3 https://leetcode.com/problems/check-if-all-as-appears-before-all-bs/

  class Solution {
    public boolean checkString(String s) {
        int countA = 0;
        for (int i=0; i<s.length(); ++i) {
            if(s.trim().charAt(i) == 'a') {
                countA++;
            }
        }
        int i=0;
        for(i=0; i<countA; ++i) {
            if (s.trim().charAt(i) == 'b') {
                return false;
            }
        }
        return true;
    }
}
